#include <GL/gl.h>
#include <stdio.h>
#include <GL/glut.h>
#include <cmath>
#include <iostream>
using namespace std;


int row=2,column=4;





void draw(int arr[][5])
{

	glPointSize(5.0);
    glColor3ub (0,100,100);
    glBegin(GL_POLYGON);


    for(int i=1;i<=column;i++)
    {
 	 glVertex2i(arr[1][i],arr[2][i]);
    }

    glEnd();


}



void addition(int arr[][5],int given[][2])
{
    int now[3][5];

    for(int i=1;i<=row;i++)
    {
        for(int j=1;j<=column;j++)
        {
            now[i][j]=arr[i][j]+given[i][1];
        }
    }


    draw(now);

}


void temp(void)
{

	glClear (GL_COLOR_BUFFER_BIT);
    glColor3ub (100,0,0);
	glPointSize(5.0);


	int arr[3][5]={           {0,0,0,0},
	                          {0,30,30,90,90},
	                          {0,30,90,90,30}};

    int given[3][2]={     {0,0},
                          {0,20},
                          {0,20}};

    draw(arr);
    addition(arr,given);



	glFlush();

}










void myDisplay(void)
{
	glClear (GL_COLOR_BUFFER_BIT);
	glPointSize(5.0);

	glFlush ();
}




void myInit (void)
{
	glClearColor(1.0, 1.0, 1.0, 0.0);
	glMatrixMode(GL_MODELVIEW);
	glLoadIdentity();
	gluOrtho2D(0.0, 700.0, 0.0, 500.0);

}

main(int argc, char** argv)
{
	glutInit(&argc, argv);
	glutInitDisplayMode (GLUT_SINGLE | GLUT_RGB);
	glutInitWindowSize (700, 500);
	glutInitWindowPosition (200, 150);
	glutCreateWindow ("Ship");
	//glutDisplayFunc(myDisplay);
	glutDisplayFunc(temp);
	myInit ();
	glutMainLoop();
}
